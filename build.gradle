// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlin_version = '1.4.10'
    }
    repositories {
        google()
        jcenter()
        
    }
    dependencies {
        classpath Deps.gradle
        classpath Deps.kotlin
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }

    /**
     * keep same configuration for all modules
     */
    afterEvaluate { module ->
        if (module.hasProperty('android')) {

            android {
                buildToolsVersion Config.buildTools
                compileSdkVersion Config.compileSdk

                defaultConfig {
                    minSdkVersion Config.minSdk
                    targetSdkVersion Config.targetSdk
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                }

                dataBinding {
                    enabled true
                }
                compileOptions {
                    sourceCompatibility Config.javaVersion
                    targetCompatibility Config.javaVersion
                }

                kotlinOptions {
                    jvmTarget = Config.javaVersion.toString()
                }
                testOptions {
                    unitTests.returnDefaultValues = true
                }
                /**
                 * provide test utils only to feature module
                 */
                if(module.name.startsWith('feature')) {
                    sourceSets {
                        test.java.srcDirs += ["${project(':core').projectDir}/src/test/java/matrixsystems/core/testutils"]
                        androidTest.java.srcDirs += ["${project(':core').projectDir}/src/androidTest/java/matrixsystems/core/testutils"]
                    }
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
